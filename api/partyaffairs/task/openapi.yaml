# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Task API
    version: 0.0.1
paths:
    /partyaffairs/api/v1/task:
        get:
            tags:
                - Task
            operationId: Task_GetTask
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTaskReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Task
            operationId: Task_UpdateTask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTaskRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTaskReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Task
            operationId: Task_CreateTask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTaskRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTaskReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Task
            operationId: Task_DeleteTask
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTaskReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /partyaffairs/api/v1/task/value:
        get:
            tags:
                - Task
            operationId: Task_GetTaskValue
            parameters:
                - name: taskId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: userId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTaskValueReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Task
            operationId: Task_DeleteTaskValue
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTaskValueReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /partyaffairs/api/v1/task/values:
        get:
            tags:
                - Task
            operationId: Task_ListTaskValue
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: taskId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: userId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: finish
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTaskValueReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Task
            operationId: Task_ExportTaskValue
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ExportTaskValueRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExportTaskValueReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /partyaffairs/api/v1/tasks:
        get:
            tags:
                - Task
            operationId: Task_ListTask
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: title
                  in: query
                  schema:
                    type: string
                - name: notFinish
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTaskReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /partyaffairs/client/v1/task:
        get:
            tags:
                - Task
            operationId: Task_GetTask
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTaskReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /partyaffairs/client/v1/task/value:
        get:
            tags:
                - Task
            operationId: Task_GetCurTaskValue
            parameters:
                - name: taskId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCurTaskValueReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Task
            operationId: Task_UpdateTaskValue
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTaskValueRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTaskValueReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Task
            operationId: Task_CreateTaskValue
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTaskValueRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTaskValueReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /partyaffairs/client/v1/tasks:
        get:
            tags:
                - Task
            operationId: Task_ListCurNotFinishTask
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: title
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCurNotFinishTaskReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateTaskReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        CreateTaskRequest:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                isUpdate:
                    type: boolean
                start:
                    type: integer
                    format: uint32
                end:
                    type: integer
                    format: uint32
                config:
                    type: string
        CreateTaskValueReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        CreateTaskValueRequest:
            type: object
            properties:
                taskId:
                    type: integer
                    format: uint32
                value:
                    type: string
        DeleteTaskReply:
            type: object
            properties: {}
        DeleteTaskValueReply:
            type: object
            properties: {}
        ExportTaskValueReply:
            type: object
            properties: {}
        ExportTaskValueRequest:
            type: object
            properties:
                taskId:
                    type: integer
                    format: uint32
        GetCurTaskValueReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                taskId:
                    type: integer
                    format: uint32
                userId:
                    type: integer
                    format: uint32
                value:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        GetTaskReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                title:
                    type: string
                description:
                    type: string
                isUpdate:
                    type: boolean
                start:
                    type: integer
                    format: uint32
                end:
                    type: integer
                    format: uint32
                config:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        GetTaskValueReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                taskId:
                    type: integer
                    format: uint32
                userId:
                    type: integer
                    format: uint32
                value:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                user:
                    $ref: '#/components/schemas/GetTaskValueReply_User'
        GetTaskValueReply_User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                nickName:
                    type: string
                realName:
                    type: string
                avatarUrl:
                    type: string
                phone:
                    type: string
                email:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListCurNotFinishTaskReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListCurNotFinishTaskReply_Task'
        ListCurNotFinishTaskReply_Task:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                title:
                    type: string
                description:
                    type: string
                isUpdate:
                    type: boolean
                start:
                    type: integer
                    format: uint32
                end:
                    type: integer
                    format: uint32
                config:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        ListTaskReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListTaskReply_Task'
        ListTaskReply_Task:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                title:
                    type: string
                description:
                    type: string
                isUpdate:
                    type: boolean
                start:
                    type: integer
                    format: uint32
                end:
                    type: integer
                    format: uint32
                config:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        ListTaskValueReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListTaskValueReply_Value'
        ListTaskValueReply_Value:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                taskId:
                    type: integer
                    format: uint32
                userId:
                    type: integer
                    format: uint32
                value:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                user:
                    $ref: '#/components/schemas/Value_User'
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateTaskReply:
            type: object
            properties: {}
        UpdateTaskRequest:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                isUpdate:
                    type: boolean
                start:
                    type: integer
                    format: uint32
                end:
                    type: integer
                    format: uint32
                config:
                    type: string
                id:
                    type: integer
                    format: uint32
        UpdateTaskValueReply:
            type: object
            properties: {}
        UpdateTaskValueRequest:
            type: object
            properties:
                taskId:
                    type: integer
                    format: uint32
                value:
                    type: string
        Value_User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                nickName:
                    type: string
                realName:
                    type: string
                avatarUrl:
                    type: string
                phone:
                    type: string
                email:
                    type: string
tags:
    - name: Task
