// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.24.4
// source: api/partyaffairs/partyaffairs_news.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewsComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	From      *NewsComment_User `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Reply     *NewsComment_User `protobuf:"bytes,3,opt,name=reply,proto3,oneof" json:"reply,omitempty"`
	Text      *string           `protobuf:"bytes,4,opt,name=text,proto3,oneof" json:"text,omitempty"`
	CreatedAt uint32            `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *NewsComment) Reset() {
	*x = NewsComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsComment) ProtoMessage() {}

func (x *NewsComment) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsComment.ProtoReflect.Descriptor instead.
func (*NewsComment) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{0}
}

func (x *NewsComment) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewsComment) GetFrom() *NewsComment_User {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *NewsComment) GetReply() *NewsComment_User {
	if x != nil {
		return x.Reply
	}
	return nil
}

func (x *NewsComment) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *NewsComment) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type AddNewsCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentId uint32  `protobuf:"varint,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	ReplyUid  *uint32 `protobuf:"varint,2,opt,name=reply_uid,json=replyUid,proto3,oneof" json:"reply_uid,omitempty"`
	Text      *string `protobuf:"bytes,3,opt,name=text,proto3,oneof" json:"text,omitempty"`
}

func (x *AddNewsCommentRequest) Reset() {
	*x = AddNewsCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewsCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewsCommentRequest) ProtoMessage() {}

func (x *AddNewsCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewsCommentRequest.ProtoReflect.Descriptor instead.
func (*AddNewsCommentRequest) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{1}
}

func (x *AddNewsCommentRequest) GetContentId() uint32 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *AddNewsCommentRequest) GetReplyUid() uint32 {
	if x != nil && x.ReplyUid != nil {
		return *x.ReplyUid
	}
	return 0
}

func (x *AddNewsCommentRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type AddNewsCommentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddNewsCommentReply) Reset() {
	*x = AddNewsCommentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewsCommentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewsCommentReply) ProtoMessage() {}

func (x *AddNewsCommentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewsCommentReply.ProtoReflect.Descriptor instead.
func (*AddNewsCommentReply) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{2}
}

func (x *AddNewsCommentReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteNewsCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteNewsCommentRequest) Reset() {
	*x = DeleteNewsCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNewsCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNewsCommentRequest) ProtoMessage() {}

func (x *DeleteNewsCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNewsCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteNewsCommentRequest) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteNewsCommentRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PageNewsCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      uint32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  uint32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	ContentId uint32  `protobuf:"varint,3,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	Text      *string `protobuf:"bytes,4,opt,name=text,proto3,oneof" json:"text,omitempty"`
}

func (x *PageNewsCommentRequest) Reset() {
	*x = PageNewsCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageNewsCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageNewsCommentRequest) ProtoMessage() {}

func (x *PageNewsCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageNewsCommentRequest.ProtoReflect.Descriptor instead.
func (*PageNewsCommentRequest) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{4}
}

func (x *PageNewsCommentRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageNewsCommentRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageNewsCommentRequest) GetContentId() uint32 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *PageNewsCommentRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type PageNewsCommentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*NewsComment `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PageNewsCommentReply) Reset() {
	*x = PageNewsCommentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageNewsCommentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageNewsCommentReply) ProtoMessage() {}

func (x *PageNewsCommentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageNewsCommentReply.ProtoReflect.Descriptor instead.
func (*PageNewsCommentReply) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{5}
}

func (x *PageNewsCommentReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageNewsCommentReply) GetList() []*NewsComment {
	if x != nil {
		return x.List
	}
	return nil
}

type NewsClassify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Weight    *uint32 `protobuf:"varint,3,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	CreatedAt uint32  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt uint32  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *NewsClassify) Reset() {
	*x = NewsClassify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsClassify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsClassify) ProtoMessage() {}

func (x *NewsClassify) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsClassify.ProtoReflect.Descriptor instead.
func (*NewsClassify) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{6}
}

func (x *NewsClassify) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewsClassify) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewsClassify) GetWeight() uint32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *NewsClassify) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *NewsClassify) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AllNewsClassifyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*NewsClassify `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AllNewsClassifyReply) Reset() {
	*x = AllNewsClassifyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllNewsClassifyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllNewsClassifyReply) ProtoMessage() {}

func (x *AllNewsClassifyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllNewsClassifyReply.ProtoReflect.Descriptor instead.
func (*AllNewsClassifyReply) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{7}
}

func (x *AllNewsClassifyReply) GetList() []*NewsClassify {
	if x != nil {
		return x.List
	}
	return nil
}

type AddNewsClassifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Weight uint32 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *AddNewsClassifyRequest) Reset() {
	*x = AddNewsClassifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewsClassifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewsClassifyRequest) ProtoMessage() {}

func (x *AddNewsClassifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewsClassifyRequest.ProtoReflect.Descriptor instead.
func (*AddNewsClassifyRequest) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{8}
}

func (x *AddNewsClassifyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddNewsClassifyRequest) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type UpdateNewsClassifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Weight uint32 `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *UpdateNewsClassifyRequest) Reset() {
	*x = UpdateNewsClassifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNewsClassifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNewsClassifyRequest) ProtoMessage() {}

func (x *UpdateNewsClassifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNewsClassifyRequest.ProtoReflect.Descriptor instead.
func (*UpdateNewsClassifyRequest) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateNewsClassifyRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateNewsClassifyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNewsClassifyRequest) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type DeleteNewsClassifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteNewsClassifyRequest) Reset() {
	*x = DeleteNewsClassifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNewsClassifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNewsClassifyRequest) ProtoMessage() {}

func (x *DeleteNewsClassifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNewsClassifyRequest.ProtoReflect.Descriptor instead.
func (*DeleteNewsClassifyRequest) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteNewsClassifyRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NewsContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title      string            `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Unit       string            `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	Cover      string            `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Desc       string            `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Read       uint32            `protobuf:"varint,7,opt,name=read,proto3" json:"read,omitempty"`
	IsTop      bool              `protobuf:"varint,8,opt,name=is_top,json=isTop,proto3" json:"is_top,omitempty"`
	Content    string            `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	ClassifyId uint32            `protobuf:"varint,10,opt,name=classify_id,json=classifyId,proto3" json:"classify_id,omitempty"`
	CreatedAt  uint32            `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  uint32            `protobuf:"varint,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Classify   *NewsClassify     `protobuf:"bytes,13,opt,name=classify,proto3" json:"classify,omitempty"`
	Resource   *NewsContent_File `protobuf:"bytes,14,opt,name=resource,proto3" json:"resource,omitempty"`
	Comments   []*NewsComment    `protobuf:"bytes,15,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *NewsContent) Reset() {
	*x = NewsContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsContent) ProtoMessage() {}

func (x *NewsContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsContent.ProtoReflect.Descriptor instead.
func (*NewsContent) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{11}
}

func (x *NewsContent) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewsContent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewsContent) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *NewsContent) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *NewsContent) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *NewsContent) GetRead() uint32 {
	if x != nil {
		return x.Read
	}
	return 0
}

func (x *NewsContent) GetIsTop() bool {
	if x != nil {
		return x.IsTop
	}
	return false
}

func (x *NewsContent) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NewsContent) GetClassifyId() uint32 {
	if x != nil {
		return x.ClassifyId
	}
	return 0
}

func (x *NewsContent) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *NewsContent) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *NewsContent) GetClassify() *NewsClassify {
	if x != nil {
		return x.Classify
	}
	return nil
}

func (x *NewsContent) GetResource() *NewsContent_File {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *NewsContent) GetComments() []*NewsComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type GetNewsContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetNewsContentRequest) Reset() {
	*x = GetNewsContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsContentRequest) ProtoMessage() {}

func (x *GetNewsContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsContentRequest.ProtoReflect.Descriptor instead.
func (*GetNewsContentRequest) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{12}
}

func (x *GetNewsContentRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PageNewsContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       uint32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   uint32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	ClassifyId *uint32 `protobuf:"varint,3,opt,name=classify_id,json=classifyId,proto3,oneof" json:"classify_id,omitempty"`
	Title      *string `protobuf:"bytes,4,opt,name=title,proto3,oneof" json:"title,omitempty"`
}

func (x *PageNewsContentRequest) Reset() {
	*x = PageNewsContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageNewsContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageNewsContentRequest) ProtoMessage() {}

func (x *PageNewsContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageNewsContentRequest.ProtoReflect.Descriptor instead.
func (*PageNewsContentRequest) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{13}
}

func (x *PageNewsContentRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageNewsContentRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageNewsContentRequest) GetClassifyId() uint32 {
	if x != nil && x.ClassifyId != nil {
		return *x.ClassifyId
	}
	return 0
}

func (x *PageNewsContentRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type PageNewsContentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*NewsContent `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PageNewsContentReply) Reset() {
	*x = PageNewsContentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageNewsContentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageNewsContentReply) ProtoMessage() {}

func (x *PageNewsContentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageNewsContentReply.ProtoReflect.Descriptor instead.
func (*PageNewsContentReply) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{14}
}

func (x *PageNewsContentReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageNewsContentReply) GetList() []*NewsContent {
	if x != nil {
		return x.List
	}
	return nil
}

type AddNewsContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Unit       string `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	Cover      string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Desc       string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Content    string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	ClassifyId uint32 `protobuf:"varint,6,opt,name=classify_id,json=classifyId,proto3" json:"classify_id,omitempty"`
	IsTop      *bool  `protobuf:"varint,7,opt,name=is_top,json=isTop,proto3,oneof" json:"is_top,omitempty"`
}

func (x *AddNewsContentRequest) Reset() {
	*x = AddNewsContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewsContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewsContentRequest) ProtoMessage() {}

func (x *AddNewsContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewsContentRequest.ProtoReflect.Descriptor instead.
func (*AddNewsContentRequest) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{15}
}

func (x *AddNewsContentRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddNewsContentRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *AddNewsContentRequest) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AddNewsContentRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AddNewsContentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddNewsContentRequest) GetClassifyId() uint32 {
	if x != nil {
		return x.ClassifyId
	}
	return 0
}

func (x *AddNewsContentRequest) GetIsTop() bool {
	if x != nil && x.IsTop != nil {
		return *x.IsTop
	}
	return false
}

type UpdateNewsContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Unit       string `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	Cover      string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Desc       string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Content    string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	ClassifyId uint32 `protobuf:"varint,6,opt,name=classify_id,json=classifyId,proto3" json:"classify_id,omitempty"`
	IsTop      *bool  `protobuf:"varint,7,opt,name=is_top,json=isTop,proto3,oneof" json:"is_top,omitempty"`
	Id         uint32 `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateNewsContentRequest) Reset() {
	*x = UpdateNewsContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNewsContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNewsContentRequest) ProtoMessage() {}

func (x *UpdateNewsContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNewsContentRequest.ProtoReflect.Descriptor instead.
func (*UpdateNewsContentRequest) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateNewsContentRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateNewsContentRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *UpdateNewsContentRequest) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UpdateNewsContentRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateNewsContentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateNewsContentRequest) GetClassifyId() uint32 {
	if x != nil {
		return x.ClassifyId
	}
	return 0
}

func (x *UpdateNewsContentRequest) GetIsTop() bool {
	if x != nil && x.IsTop != nil {
		return *x.IsTop
	}
	return false
}

func (x *UpdateNewsContentRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteNewsContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteNewsContentRequest) Reset() {
	*x = DeleteNewsContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNewsContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNewsContentRequest) ProtoMessage() {}

func (x *DeleteNewsContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNewsContentRequest.ProtoReflect.Descriptor instead.
func (*DeleteNewsContentRequest) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteNewsContentRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NewsComment_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NickName  string  `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	RealName  *string `protobuf:"bytes,3,opt,name=realName,proto3,oneof" json:"realName,omitempty"`
	AvatarUrl *string `protobuf:"bytes,4,opt,name=avatarUrl,proto3,oneof" json:"avatarUrl,omitempty"`
	Gender    *string `protobuf:"bytes,5,opt,name=gender,proto3,oneof" json:"gender,omitempty"`
}

func (x *NewsComment_User) Reset() {
	*x = NewsComment_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsComment_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsComment_User) ProtoMessage() {}

func (x *NewsComment_User) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsComment_User.ProtoReflect.Descriptor instead.
func (*NewsComment_User) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{0, 0}
}

func (x *NewsComment_User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewsComment_User) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *NewsComment_User) GetRealName() string {
	if x != nil && x.RealName != nil {
		return *x.RealName
	}
	return ""
}

func (x *NewsComment_User) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

func (x *NewsComment_User) GetGender() string {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return ""
}

type NewsContent_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sha  string `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *NewsContent_File) Reset() {
	*x = NewsContent_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsContent_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsContent_File) ProtoMessage() {}

func (x *NewsContent_File) ProtoReflect() protoreflect.Message {
	mi := &file_api_partyaffairs_partyaffairs_news_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsContent_File.ProtoReflect.Descriptor instead.
func (*NewsContent_File) Descriptor() ([]byte, []int) {
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP(), []int{11, 0}
}

func (x *NewsContent_File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewsContent_File) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *NewsContent_File) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_api_partyaffairs_partyaffairs_news_proto protoreflect.FileDescriptor

var file_api_partyaffairs_partyaffairs_news_proto_rawDesc = []byte{
	0x0a, 0x28, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69,
	0x72, 0x73, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x5f,
	0x6e, 0x65, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x03, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69,
	0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61,
	0x69, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x4d, 0x0a,
	0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x1a, 0xb9, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x72,
	0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72,
	0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x55, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x55, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4e, 0x65,
	0x77, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x77, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0x32, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x22, 0x6f, 0x0a,
	0x14, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x98,
	0x01, 0x0a, 0x0c, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x5a, 0x0a, 0x14, 0x41, 0x6c, 0x6c,
	0x4e, 0x65, 0x77, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x42, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x73,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x72, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x34, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a,
	0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbc, 0x04, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x54, 0x6f, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x4a, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x4e, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x3e, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x68, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x2a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x67,
	0x65, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x26, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0x32, 0x20, 0x00, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x6f, 0x0a, 0x14, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x41, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x83, 0x02, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x69, 0x73, 0x54, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x22, 0x9f, 0x02, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x75,
	0x6e, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00,
	0x52, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x06,
	0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05,
	0x69, 0x73, 0x54, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x22, 0x33, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_partyaffairs_partyaffairs_news_proto_rawDescOnce sync.Once
	file_api_partyaffairs_partyaffairs_news_proto_rawDescData = file_api_partyaffairs_partyaffairs_news_proto_rawDesc
)

func file_api_partyaffairs_partyaffairs_news_proto_rawDescGZIP() []byte {
	file_api_partyaffairs_partyaffairs_news_proto_rawDescOnce.Do(func() {
		file_api_partyaffairs_partyaffairs_news_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_partyaffairs_partyaffairs_news_proto_rawDescData)
	})
	return file_api_partyaffairs_partyaffairs_news_proto_rawDescData
}

var file_api_partyaffairs_partyaffairs_news_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_api_partyaffairs_partyaffairs_news_proto_goTypes = []interface{}{
	(*NewsComment)(nil),               // 0: partyaffairs.api.partyaffairs.v1.NewsComment
	(*AddNewsCommentRequest)(nil),     // 1: partyaffairs.api.partyaffairs.v1.AddNewsCommentRequest
	(*AddNewsCommentReply)(nil),       // 2: partyaffairs.api.partyaffairs.v1.AddNewsCommentReply
	(*DeleteNewsCommentRequest)(nil),  // 3: partyaffairs.api.partyaffairs.v1.DeleteNewsCommentRequest
	(*PageNewsCommentRequest)(nil),    // 4: partyaffairs.api.partyaffairs.v1.PageNewsCommentRequest
	(*PageNewsCommentReply)(nil),      // 5: partyaffairs.api.partyaffairs.v1.PageNewsCommentReply
	(*NewsClassify)(nil),              // 6: partyaffairs.api.partyaffairs.v1.NewsClassify
	(*AllNewsClassifyReply)(nil),      // 7: partyaffairs.api.partyaffairs.v1.AllNewsClassifyReply
	(*AddNewsClassifyRequest)(nil),    // 8: partyaffairs.api.partyaffairs.v1.AddNewsClassifyRequest
	(*UpdateNewsClassifyRequest)(nil), // 9: partyaffairs.api.partyaffairs.v1.UpdateNewsClassifyRequest
	(*DeleteNewsClassifyRequest)(nil), // 10: partyaffairs.api.partyaffairs.v1.DeleteNewsClassifyRequest
	(*NewsContent)(nil),               // 11: partyaffairs.api.partyaffairs.v1.NewsContent
	(*GetNewsContentRequest)(nil),     // 12: partyaffairs.api.partyaffairs.v1.GetNewsContentRequest
	(*PageNewsContentRequest)(nil),    // 13: partyaffairs.api.partyaffairs.v1.PageNewsContentRequest
	(*PageNewsContentReply)(nil),      // 14: partyaffairs.api.partyaffairs.v1.PageNewsContentReply
	(*AddNewsContentRequest)(nil),     // 15: partyaffairs.api.partyaffairs.v1.AddNewsContentRequest
	(*UpdateNewsContentRequest)(nil),  // 16: partyaffairs.api.partyaffairs.v1.UpdateNewsContentRequest
	(*DeleteNewsContentRequest)(nil),  // 17: partyaffairs.api.partyaffairs.v1.DeleteNewsContentRequest
	(*NewsComment_User)(nil),          // 18: partyaffairs.api.partyaffairs.v1.NewsComment.User
	(*NewsContent_File)(nil),          // 19: partyaffairs.api.partyaffairs.v1.NewsContent.File
}
var file_api_partyaffairs_partyaffairs_news_proto_depIdxs = []int32{
	18, // 0: partyaffairs.api.partyaffairs.v1.NewsComment.from:type_name -> partyaffairs.api.partyaffairs.v1.NewsComment.User
	18, // 1: partyaffairs.api.partyaffairs.v1.NewsComment.reply:type_name -> partyaffairs.api.partyaffairs.v1.NewsComment.User
	0,  // 2: partyaffairs.api.partyaffairs.v1.PageNewsCommentReply.list:type_name -> partyaffairs.api.partyaffairs.v1.NewsComment
	6,  // 3: partyaffairs.api.partyaffairs.v1.AllNewsClassifyReply.list:type_name -> partyaffairs.api.partyaffairs.v1.NewsClassify
	6,  // 4: partyaffairs.api.partyaffairs.v1.NewsContent.classify:type_name -> partyaffairs.api.partyaffairs.v1.NewsClassify
	19, // 5: partyaffairs.api.partyaffairs.v1.NewsContent.resource:type_name -> partyaffairs.api.partyaffairs.v1.NewsContent.File
	0,  // 6: partyaffairs.api.partyaffairs.v1.NewsContent.comments:type_name -> partyaffairs.api.partyaffairs.v1.NewsComment
	11, // 7: partyaffairs.api.partyaffairs.v1.PageNewsContentReply.list:type_name -> partyaffairs.api.partyaffairs.v1.NewsContent
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_partyaffairs_partyaffairs_news_proto_init() }
func file_api_partyaffairs_partyaffairs_news_proto_init() {
	if File_api_partyaffairs_partyaffairs_news_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewsCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewsCommentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNewsCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageNewsCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageNewsCommentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsClassify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllNewsClassifyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewsClassifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNewsClassifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNewsClassifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageNewsContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageNewsContentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewsContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNewsContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNewsContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsComment_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_partyaffairs_partyaffairs_news_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsContent_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_partyaffairs_partyaffairs_news_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_api_partyaffairs_partyaffairs_news_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_api_partyaffairs_partyaffairs_news_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_api_partyaffairs_partyaffairs_news_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_api_partyaffairs_partyaffairs_news_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_api_partyaffairs_partyaffairs_news_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_api_partyaffairs_partyaffairs_news_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_api_partyaffairs_partyaffairs_news_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_partyaffairs_partyaffairs_news_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_partyaffairs_partyaffairs_news_proto_goTypes,
		DependencyIndexes: file_api_partyaffairs_partyaffairs_news_proto_depIdxs,
		MessageInfos:      file_api_partyaffairs_partyaffairs_news_proto_msgTypes,
	}.Build()
	File_api_partyaffairs_partyaffairs_news_proto = out.File
	file_api_partyaffairs_partyaffairs_news_proto_rawDesc = nil
	file_api_partyaffairs_partyaffairs_news_proto_goTypes = nil
	file_api_partyaffairs_partyaffairs_news_proto_depIdxs = nil
}
