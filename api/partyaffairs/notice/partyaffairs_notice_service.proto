syntax = "proto3";

package partyaffairs.api.partyaffairs.notice.v1;

option go_package = "./v1;v1";
option java_multiple_files = true;
option java_package = "partyaffairs.api.partyaffairs.notice.v1";
option java_outer_classname = "NoticeV1";

import "google/api/annotations.proto";
import "api/partyaffairs/notice/partyaffairs_notice.proto";

service Notice{
  // GetNotice 获取指定的通知信息
  rpc GetNotice (GetNoticeRequest) returns (GetNoticeReply) {
    option (google.api.http) = {
      get: "/partyaffairs/api/v1/notice",
      additional_bindings:{
        get: "/partyaffairs/client/v1/notice",
      }
    };
  }

  // ListNotice 获取通知信息列表
  rpc ListNotice (ListNoticeRequest) returns (ListNoticeReply) {
    option (google.api.http) = {
      get: "/partyaffairs/api/v1/notices",
      additional_bindings:{
        get: "/partyaffairs/client/v1/notices",
      }
    };
  }

  // CreateNotice 创建通知信息
  rpc CreateNotice (CreateNoticeRequest) returns (CreateNoticeReply) {
    option (google.api.http) = {
      post: "/partyaffairs/api/v1/notice",
      body: "*"
    };
  }

  // PushNotice 推送通知信息
  rpc PushNotice (PushNoticeRequest) returns (PushNoticeReply) {
    option (google.api.http) = {
      post: "/partyaffairs/api/v1/notice/push",
      body: "*"
    };
  }

  // UpdateNotice 更新通知信息
  rpc UpdateNotice (UpdateNoticeRequest) returns (UpdateNoticeReply) {
    option (google.api.http) = {
      put: "/partyaffairs/api/v1/notice",
      body: "*"
    };
  }

  // DeleteNotice 删除通知信息
  rpc DeleteNotice (DeleteNoticeRequest) returns (DeleteNoticeReply) {
    option (google.api.http) = {
      delete: "/partyaffairs/api/v1/notice",
    };
  }

}